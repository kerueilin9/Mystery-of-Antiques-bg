import{c as d,q as p,w as f,g as h,u as w,l as R,a as q,r as m,b as u,p as V,m as P,e as b,i as g,o as D,n as I,t as B}from"./firebaseConfig-BR434puB.js";const x=async(o,s,e,a,c,l)=>{const t=d(o,s);let n=p(t,f(e,"==",a)),r=(await h(n)).docs.map(i=>w(i.ref,{[c]:R(l)}));await Promise.all(r)},C=async(o,s,e)=>{const a=d(q,"rooms");let c=p(a,f("roomId","==",o)),t=(await h(c)).docs.map(n=>w(n.ref,{[s]:R(e)}));await Promise.all(t)},$=async(o,s,e,a,c,l)=>{const t=d(o,s);let n=p(t,f(e,"==",a));const r=(await h(n)).docs.map(i=>w(i.ref,{[c]:l}));await Promise.all(r)},j=async(o,s)=>{const e=m(u,o),a=V(e);await P(a,s)},k=async(o,s,e)=>{const a=m(u,"/rooms"),c=b(a,D("roomId"),g(o)),l=await I(c);if(l.exists()){const t=l.val(),n=Object.keys(t)[0],r=(t[n][s]||0)+e,i=m(u,`/rooms/${n}`);B(i,{[s]:r}).then(()=>{console.log("Round incremented successfully!")})}else console.log("roomId not found")};export{k as a,$ as b,C as c,x as i,j as s};
