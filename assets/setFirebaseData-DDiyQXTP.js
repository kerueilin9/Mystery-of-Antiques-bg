import{c as m,q as u,w as p,g as f,u as y,l as R,a as V,r as h,b as w,p as D,m as b,e as g,i as I,o as B,n as C,t as T}from"./firebaseConfig-BR434puB.js";const x=async(o,s,a,e,n,c)=>{const t=m(o,s);let r=u(t,p(a,"==",e)),l=(await f(r)).docs.map(d=>y(d.ref,{[n]:R(c)}));await Promise.all(l)},K=async(o,s,a)=>{const e=m(V,"rooms");let n=u(e,p("roomId","==",o)),t=(await f(n)).docs.map(r=>y(r.ref,{[s]:R(a)}));await Promise.all(t)},S=async(o,s,a,e,n,c)=>{const t=m(o,s);let r=u(t,p(a,"==",e));const l=(await f(r)).docs.map(d=>y(d.ref,{[n]:c}));await Promise.all(l)},j=async(o,s,a,e)=>{const n=m(o,"players");let c=u(n,p("name","==",s)),t=await f(c);const i=t.docs[0].data(),l=`round${a}`,d=i.record[l]||[];d.push(e);const P=t.docs.map(q=>y(q.ref,{record:{...i.record,[l]:d}}));await Promise.all(P)},k=async(o,s)=>{const a=h(w,o),e=D(a);await b(e,s)},v=async(o,s,a)=>{const e=h(w,"/rooms"),n=g(e,B("roomId"),I(o)),c=await C(n);if(c.exists()){const t=c.val(),r=Object.keys(t)[0],l=(t[r][s]||0)+a,d=h(w,`/rooms/${r}`);T(d,{[s]:l}).then(()=>{console.log("Round incremented successfully!")})}else console.log("roomId not found")};export{v as a,S as b,j as c,K as d,x as i,k as s};
